// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Data;

namespace ThAmCo.Catering.Data.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    [Migration("20181203134123_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("thamco.catering")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThAmCo.Catering.Controllers.Booking", b =>
                {
                    b.Property<int>("FoodMenuId");

                    b.Property<DateTime>("EventDate");

                    b.Property<int>("Id");

                    b.Property<DateTime>("WhenMade");

                    b.HasKey("FoodMenuId");

                    b.HasAlternateKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ThAmCo.Catering.Controllers.FoodMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MenuCost");

                    b.Property<string>("MenuDescription")
                        .IsRequired();

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<int>("People");

                    b.HasKey("Id");

                    b.ToTable("FoodMenus");

                    b.HasData(
                        new { Id = 1, MenuCost = 24.99, MenuDescription = "Honey-roast ham with wholegrain mustard, Chicken Caesar salad sandwiches", MenuName = "Sandwiches Buffet", People = 10 },
                        new { Id = 2, MenuCost = 24.99, MenuDescription = "Roast tomato and herb quiche, Smoked haddock & spring onion fishcake, Chicken fillet skewers with sweet chilli dipping sauce", MenuName = "Finger Buffet", People = 10 },
                        new { Id = 3, MenuCost = 24.99, MenuDescription = "Mini strawberry and cream pavlova, Fresh fruit skewer with chocolate dipping sauce", MenuName = "Mini Desserts", People = 10 },
                        new { Id = 4, MenuCost = 24.99, MenuDescription = "Slider burger platter with pickles and sauces, Fish finger sandwich with tartare sauce", MenuName = "Late-night Snacks", People = 10 }
                    );
                });

            modelBuilder.Entity("ThAmCo.Catering.Controllers.Booking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Controllers.FoodMenu", "FoodMenu")
                        .WithMany()
                        .HasForeignKey("FoodMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
